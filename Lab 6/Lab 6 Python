from collections import deque

def canFinish(numCourses, prerequisites):
    if numCourses == 1:
        return True

    adj = [[] for _ in range(numCourses)]
    in_degree = [0] * numCourses

    for prereq in prerequisites:
        course, pre = prereq
        adj[pre].append(course)
        in_degree[course] += 1

    queue = deque([i for i in range(numCourses) if in_degree[i] == 0])
    count = 0

    while queue:
        node = queue.popleft() 
        count += 1
        for neighbor in adj[node]:
            in_degree[neighbor] -= 1
            if in_degree[neighbor] == 0:
                queue.append(neighbor)

    if(count == numCourses):
        return True
    else:
        return False
